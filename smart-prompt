       RED="\[\033[1;31m\]"
    YELLOW="\[\033[1;33m\]"
     GREEN="\[\033[1;32m\]"
      BLUE="\[\033[1;34m\]"
      PINK="\[\033[1;35m\]"
LIGHT_BLUE="\[\033[1;36m\]"
      GRAY="\[\033[1;30m\]"
COLOR_NONE="\[\033[0m\]"
function get_remote_status() {
    local git_status=$1
    local remote=""
    if [[ "$git_status" =~ .*ahead.* && "$git_status" =~ .*behind.* ]] ; then
        remote="↕"        
    elif [[ "$git_status" =~ .*ahead.* ]] ; then
        remote="↑"
    elif [[ "$git_status" =~ .*behind.* ]] ; then
        remote="↓"
    fi
    echo "$remote"
}
function get_branch_name() {
    echo "$1" | grep ^\* | cut -d " " -f2
}
function show_git_status() {
    local git_status=$1
    local state="${LIGHT_BLUE}"
        
    local staged=$(echo "$git_status" | grep -c "^[A-Z] ")
    local modified=$(echo "$git_status" | grep -c "^ [A-Z]")
    local untracked=$(echo "$git_status" | grep -c "^??")
    local files_status="$staged $modified $untracked"
    if [[ $files_status == "0 0 0" ]] ; then
        echo "${GREEN}[${branch_name}]"
    else
        if [[ $modified != 0 ]] ; then
            state="${RED}"
        elif [[ $staged != 0 ]] ; then
            state="${YELLOW}"
        fi
        echo "${state}[${branch_name} $files_status]"
    fi
}
function get_branch_info() {
    local git_status=$(git status --porcelain)
    local branch_name=$(get_branch_name "$1")
    local conflicts=$(echo "$git_status" | grep -c "^[A-Z][A-Z]")
    
    if [[ $conflicts == 0 ]] ; then
        show_git_status "$git_status"
    else
        echo "${RED}[${branch_name} !$conflicts]"
    fi
}
function get_branch_status() {
    (git branch -v | grep "^\*") 2>&1
}
function get_git_info() {
    local branch=$(get_branch_status)
    
    if [[ ${branch} =~ ^\* ]] ; then   
        local remote=$(get_remote_status "$branch")
        local branch_name=$(get_branch_info "$branch")
        
        echo "${branch_name}${remote}${COLOR_NONE} "
    fi
}
function get_location (){
    local pwd=`pwd | sed "s#$HOME#~#"`
    local dirname=""
    if [[ $pwd == "~" ]] || [[ $pwd == "/" ]] ; then
        dirname=$pwd
    else
        dirname=`dirname $pwd | sed -r "s/\/(.)[^\/]*/\/\1/g"`
        test $dirname == "/" && dirname=""
        
	dirname="$dirname/`basename $pwd`"
    fi
    echo "${BLUE}${dirname}"
}
function get_user_and_host() {
    local user_and_host="${GREEN}\u@\h"
    if [ ! -z $VIRTUAL_ENV ] ; then
        local venv="${VIRTUAL_ENV##*/}"
        user_and_host="${user_and_host} → ${venv#"."}"
    fi
    echo "${user_and_host}"
}
function get_symbol() {
    local symbol="#"
    if [[ $EUID -ne 0 ]]; then
        symbol="$"            
    fi
    echo "${PINK}${symbol}${COLOR_NONE}"
}
function set_prompt () {
    local git_info=$(get_git_info)
    local location=$(get_location) 
    local user_and_host=$(get_user_and_host)
    local prompt_symbol=$(get_symbol)
    echo "${user_and_host} ${location} ${git_info}${prompt_symbol} "
}
set_prompt
