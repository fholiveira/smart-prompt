#import colors

function get_remote_status() {
    local git_status=$1
    local remote=""

    if [[ "$git_status" =~ .*ahead.* && "$git_status" =~ .*behind.* ]] ; then
        remote="↕"        
    elif [[ "$git_status" =~ .*ahead.* ]] ; then
        remote="↑"
    elif [[ "$git_status" =~ .*behind.* ]] ; then
        remote="↓"
    fi

    echo "$remote"
}

function get_branch_name() {
    echo "$1" | grep ^\* | cut -d " " -f2
}

function show_git_status() {
    local git_status=$1
    local state="${LIGHT_BLUE}"
        
    local staged=$(echo "$git_status" | grep -c "^[A-Z] ")
    local modified=$(echo "$git_status" | grep -c "^ [A-Z]")
    local untracked=$(echo "$git_status" | grep -c "^??")

    local files_status="$staged $modified $untracked"

    if [[ $files_status == "0 0 0" ]] ; then
        echo "${GREEN}[${branch_name}]"
    else
        if [[ $modified != 0 ]] ; then
            state="${RED}"
        elif [[ $staged != 0 ]] ; then
            state="${YELLOW}"
        fi

        echo "${state}[${branch_name} $files_status]"
    fi
}

function get_branch_info() {
    local git_status=$(git status --porcelain)
    local branch_name=$(get_branch_name "$1")

    local conflicts=$(echo "$git_status" | grep -c "^[A-Z][A-Z]")
    
    if [[ $conflicts == 0 ]] ; then
        show_git_status "$git_status"
    else
        echo "${RED}[${branch_name} !$conflicts]"
    fi
}

function get_branch_status() {
    (git branch -v | grep "^\*") 2>&1
}

function get_git_info() {
    local branch=$(get_branch_status)
    
    if [[ ${branch} =~ ^\* ]] ; then   
        local remote=$(get_remote_status "$branch")
        local branch_name=$(get_branch_info "$branch")
        
        echo "${branch_name}${remote}${COLOR_NONE} "
    fi
}
